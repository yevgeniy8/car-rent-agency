{"version":3,"file":"static/js/224.dcb0b6da.chunk.js","mappings":"2RAAaA,EAAqB,WAG9B,IAFA,IAAMC,EAAa,GAEVC,EAAI,GAAIA,GAAK,IAAKA,GAAK,GAC5BD,EAAWE,KAAK,CACZC,MAAOF,EACPG,MAAOH,IAIf,OAAOD,CACV,E,oRCkND,EApMmB,SAAC,GAAyC,ICzB3BK,EDyBZC,EAAsC,EAAtCA,eAAgBC,EAAsB,EAAtBA,gBAC5BC,GAAWC,EAAAA,EAAAA,MAEjB,GAA0BC,EAAAA,EAAAA,UAAS,CAC/BP,MAAO,GACPC,MAAO,mBAFX,eAAOO,EAAP,KAAcC,EAAd,KAIA,GAA0BF,EAAAA,EAAAA,UAAS,CAC/BP,MAAO,GACPC,MAAO,SAFX,eAAOS,EAAP,KAAcC,EAAd,KAKA,GAA8BJ,EAAAA,EAAAA,UAAS,CAAEK,KAAM,GAAIC,GAAI,KAAvD,eAAOC,EAAP,KAAgBC,EAAhB,KAaMC,EAAsB,SAAAC,GACxB,OAAQA,EAAIC,OAAOC,MACf,IAAK,OACDJ,GAAW,SAAAK,GAAS,yBACbA,GADa,IAEhBR,KAAMK,EAAIC,OAAOlB,OAFD,IAIpB,MACJ,IAAK,KACDe,GAAW,SAAAK,GAAS,yBACbA,GADa,IAEhBP,GAAII,EAAIC,OAAOlB,OAFC,IAQ/B,EAgDD,OACI,0BACI,UAAC,KAAD,CAAMqB,OAAO,GAAb,WACI,UAAC,KAAD,YACI,SAAC,KAAD,CAAOC,QAAQ,QAAf,SAAuB,eACvB,SAAC,KAAD,CACIC,GAAG,QACHC,SC1HUtB,ED0HkBuB,ECzHhCvB,EAAOwB,KAAI,SAAAC,GACvB,MAAO,CACH3B,MAAO2B,EACP1B,MAAO0B,EAEd,KDqHmB3B,MAAOQ,EACPoB,SArFM,SAAAC,GACtBpB,EAASoB,EACZ,EAoFmBC,OAAQ,CACJC,QAAS,SAAAD,GAAM,yBACRA,GADQ,IAEXE,aAAc,OACdC,OAAQ,OACRC,gBAAiB,UACjBC,OAAQ,OACRC,OAAQ,QANG,SAY3B,UAAC,KAAD,YACI,SAAC,KAAD,CAAOd,QAAQ,QAAf,SAAuB,mBACvB,SAAC,KAAD,CACIC,GAAG,QACHC,QAAS5B,IACTI,MAAOU,EACPkB,SArGM,SAAAC,GACtBlB,EAAS,CACLX,MAAM,IAAD,OAAM6B,EAAO7B,OAClBC,MAAM,MAAD,OAAQ4B,EAAO5B,MAAf,MAEZ,EAiGmB6B,OAAQ,CACJC,QAAS,SAAAD,GAAM,yBACRA,GADQ,IAEXE,aAAc,OACdC,OAAQ,OACRC,gBAAiB,UACjBC,OAAQ,OACRC,OAAQ,QANG,SAY3B,mBAAOd,QAAQ,GAAf,WACI,SAAC,KAAD,UAAO,4BACP,UAAC,KAAD,YACI,UAAC,KAAD,YACI,SAAC,KAAD,CAAaA,QAAQ,OAArB,SAA4B,UAC5B,SAAC,KAAD,CACIe,KAAK,OACLlB,KAAK,OACLI,GAAG,OACHvB,MAAOc,EAAQF,KACfgB,SAAUZ,EACVsB,OAAO,SACPC,UAAW,EACXC,aAAc,EACdC,mBAAmB,QAI3B,UAAC,KAAD,YACI,SAAC,KAAD,CAAanB,QAAQ,KAArB,SAA0B,QAC1B,SAAC,KAAD,CACIe,KAAK,OACLlB,KAAK,KACLI,GAAG,KACHvB,MAAOc,EAAQD,GACfe,SAAUZ,EACVsB,OAAO,SACPC,UAAW,EACXC,aAAc,EACdC,mBAAmB,cAMnC,SAAC,KAAD,CACIC,SACoB,KAAhBlC,EAAMR,OACU,KAAhBU,EAAMV,OACW,KAAjBc,EAAQF,MACO,KAAfE,EAAQD,GAEZ8B,QAnIU,SAAA1B,GAAQ,IAAD,IAC7BA,EAAI2B,iBAEJzC,GAAe,GAEfE,GACIwC,EAAAA,EAAAA,IAAa,CACTrC,MAAAA,EACAE,MAAAA,EACAI,QAAS,CACLF,KAAI,UAAEE,EAAQF,YAAV,aAAE,EAAckC,MAAM,KAAKC,KAAK,IACpClC,GAAE,UAAEC,EAAQD,UAAV,aAAE,EAAYiC,MAAM,KAAKC,KAAK,OAI/C,EA6GW,SAQC,YAID,SAAC,KAAD,CACIL,SACoB,KAAhBlC,EAAMR,OACU,KAAhBU,EAAMV,OACW,KAAjBc,EAAQF,MACO,KAAfE,EAAQD,GAEZ8B,QA9HS,SAAA1B,GACrBA,EAAI2B,iBAEJvC,GAAS2C,EAAAA,EAAAA,IAAU,IAEnB7C,GAAe,GACfC,GAAgB,GAEhBK,EAAS,CACLT,MAAO,GACPC,MAAO,mBAGXU,EAAS,CACLX,MAAO,GACPC,MAAO,SAGXc,EAAW,CAAEH,KAAM,GAAIC,GAAI,KAE3BR,GACIwC,EAAAA,EAAAA,IAAa,CACTrC,MAAO,CAAER,MAAO,IAChBU,MAAO,CAAEV,MAAO,IAChBc,QAAS,CAAEF,KAAM,GAAIC,GAAI,MAGpC,EA4FW,SAQC,cAMhB,EElGKoC,E,QAAcC,EAAAA,IAAH,iDAIjB,EAtHgB,WACZ,OAAwB3C,EAAAA,EAAAA,UAAS,GAAjC,eAAO4C,EAAP,KAAaC,EAAb,KACA,GAAwC7C,EAAAA,EAAAA,WAAS,GAAjD,eAAO8C,EAAP,KAAqBjD,EAArB,KACA,GAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAO+C,EAAP,KAAgBC,EAAhB,KACA,GAAsChD,EAAAA,EAAAA,WAAS,GAA/C,eAAOiD,EAAP,KAAoBrD,EAApB,KAEMsD,GAAOC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,KAAKA,IAAf,IAExBG,GAASF,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAV,IAE1BvD,GAAWC,EAAAA,EAAAA,MAEXuD,EAAU,mCAAG,qFACfzD,GAAgB,GAEhBgD,GAAQ,SAAAhC,GAAS,OAAIA,EAAY,CAAhB,IAHF,SAKQf,GAAS2C,EAAAA,EAAAA,IAAUG,EAAO,IALlC,cAOFW,QAAQC,KAAKC,OAAS,GAC/B5D,GAAgB,GARL,2CAAH,sDAYhB6D,EAAAA,EAAAA,YAAU,WACO,IAATd,IACA/C,GAAgB,GAChBC,GAAS2C,EAAAA,EAAAA,IAAU,IAE1B,GAAE,CAAC3C,EAAU8C,KAEdc,EAAAA,EAAAA,YAAU,WACN,GAAIT,EAAa,CACb,IAAMU,EAAI,mCAAG,2FACT9D,GAAgB,GADP,SAEcC,GAAS8D,EAAAA,EAAAA,OAFvB,OAEHC,EAFG,OAGTb,EAAWa,EAASN,QAAQC,MAHnB,2CAAH,qDAKVG,GACH,CACJ,GAAE,CAAC7D,EAAUmD,IAEd,IAAMa,EAAc,WAChB,MACqB,KAAjBT,EAAOpD,OACU,KAAjBoD,EAAOlD,OACiB,KAAxBkD,EAAO9C,QAAQF,MACO,KAAtBgD,EAAO9C,QAAQD,GAER4C,EAEND,EAGDA,EACqBF,EAAQM,QAAO,SAAAjC,GAChC,IAAI2C,GAAa,EA2BjB,OAzBIV,EAAOpD,QACP8D,EAAaA,GAAc3C,EAAK4C,OAASX,EAAOpD,OAGhDoD,EAAOlD,QACP4D,EACIA,GAAc3C,EAAK6C,cAAgBZ,EAAOlD,OAG9CkD,EAAO9C,QAAQF,MAAQgD,EAAO9C,QAAQD,GACtCyD,EACIA,GACA3C,EAAKb,QAAU8C,EAAO9C,QAAQF,MAC9Be,EAAKb,QAAU8C,EAAO9C,QAAQD,IAE9B+C,EAAO9C,QAAQF,OACf0D,EACIA,GAAc3C,EAAKb,QAAU8C,EAAO9C,QAAQF,MAEhDgD,EAAO9C,QAAQD,KACfyD,EACIA,GAAc3C,EAAKb,QAAU8C,EAAO9C,QAAQD,KAIjDyD,CACV,SA9BL,EAFWb,CAoCd,EAED,OACI,4BACI,SAAC,EAAD,CACItD,eAAgBA,EAChBC,gBAAiBA,IAGpBoD,GAAwC,IAAzBa,IAAcL,QAC1B,SAACf,EAAD,UAAa,6EAKb,SAACwB,EAAA,EAAD,CACIhB,KAAMY,IACNR,WAAYA,EACZR,aAAcA,EACdG,YAAaA,MAKhC,C","sources":["helpers/createPriceOptions.js","components/SearchForm/SearchForm.jsx","helpers/createBrandOptions.js","pages/Catalog.jsx"],"sourcesContent":["export const createPriceOptions = () => {\n    const arrayPrice = [];\n\n    for (let i = 30; i <= 400; i += 10) {\n        arrayPrice.push({\n            value: i,\n            label: i,\n        });\n    }\n\n    return arrayPrice;\n};\n","import React, { useState } from 'react';\n\nimport {\n    Form,\n    WrapperBrand,\n    Label,\n    WrapperPrice,\n    Input,\n    InputTo,\n    Inputs,\n    WrapperInput,\n    LabelHolder,\n    ButtonForm,\n} from './SearchForm.styled';\n\nimport Select from 'react-select';\nimport { createBrandOptions } from 'helpers/createBrandOptions';\nimport { createPriceOptions } from 'helpers/createPriceOptions';\n\nimport { changeFilter } from 'redux/filter/filterSlice';\n\nimport brandOpt from '../../data/makes.json';\nimport { useDispatch } from 'react-redux';\nimport { fetchCars } from 'redux/cars/carsOperations';\n\nconst SearchForm = ({ setIsFiltering, setShowLoadMore }) => {\n    const dispatch = useDispatch();\n\n    const [brand, setBrand] = useState({\n        value: '',\n        label: 'Enter the text',\n    });\n    const [price, setPrice] = useState({\n        value: '',\n        label: 'To $',\n    });\n\n    const [mileage, setMileage] = useState({ from: '', to: '' });\n\n    const handleSelectBrand = option => {\n        setBrand(option);\n    };\n\n    const handleSelectPrice = option => {\n        setPrice({\n            value: `$${option.value}`,\n            label: `To ${option.label}$`,\n        });\n    };\n\n    const handleChangeMileage = evt => {\n        switch (evt.target.name) {\n            case 'from':\n                setMileage(prevState => ({\n                    ...prevState,\n                    from: evt.target.value,\n                }));\n                break;\n            case 'to':\n                setMileage(prevState => ({\n                    ...prevState,\n                    to: evt.target.value,\n                }));\n                break;\n            default:\n                break;\n        }\n    };\n\n    const handleClickSearch = evt => {\n        evt.preventDefault();\n\n        setIsFiltering(true);\n\n        dispatch(\n            changeFilter({\n                brand,\n                price,\n                mileage: {\n                    from: mileage.from?.split(',').join(''),\n                    to: mileage.to?.split(',').join(''),\n                },\n            })\n        );\n    };\n\n    const handleClickClear = evt => {\n        evt.preventDefault();\n\n        dispatch(fetchCars(1));\n\n        setIsFiltering(false);\n        setShowLoadMore(true);\n\n        setBrand({\n            value: '',\n            label: 'Enter the text',\n        });\n\n        setPrice({\n            value: '',\n            label: 'To $',\n        });\n\n        setMileage({ from: '', to: '' });\n\n        dispatch(\n            changeFilter({\n                brand: { value: '' },\n                price: { value: '' },\n                mileage: { from: '', to: '' },\n            })\n        );\n    };\n\n    return (\n        <div>\n            <Form action=\"\">\n                <WrapperBrand>\n                    <Label htmlFor=\"brand\">Car brand</Label>\n                    <Select\n                        id=\"brand\"\n                        options={createBrandOptions(brandOpt)}\n                        value={brand}\n                        onChange={handleSelectBrand}\n                        styles={{\n                            control: styles => ({\n                                ...styles,\n                                borderRadius: '14px',\n                                height: '48px',\n                                backgroundColor: '#F7F7FB',\n                                border: 'none',\n                                output: 'none',\n                            }),\n                        }}\n                    />\n                </WrapperBrand>\n\n                <WrapperPrice>\n                    <Label htmlFor=\"price\">Price/ 1 hour</Label>\n                    <Select\n                        id=\"price\"\n                        options={createPriceOptions()}\n                        value={price}\n                        onChange={handleSelectPrice}\n                        styles={{\n                            control: styles => ({\n                                ...styles,\n                                borderRadius: '14px',\n                                height: '48px',\n                                backgroundColor: '#F7F7FB',\n                                border: 'none',\n                                output: 'none',\n                            }),\n                        }}\n                    />\n                </WrapperPrice>\n\n                <label htmlFor=\"\">\n                    <Label> Ð¡ar mileage / km</Label>\n                    <Inputs>\n                        <WrapperInput>\n                            <LabelHolder htmlFor=\"from\">From</LabelHolder>\n                            <Input\n                                type=\"text\"\n                                name=\"from\"\n                                id=\"from\"\n                                value={mileage.from}\n                                onChange={handleChangeMileage}\n                                format=\"##,###\"\n                                maxLength={6}\n                                decimalScale={3}\n                                thousandSeparator={true}\n                            />\n                        </WrapperInput>\n\n                        <WrapperInput>\n                            <LabelHolder htmlFor=\"to\">To</LabelHolder>\n                            <InputTo\n                                type=\"text\"\n                                name=\"to\"\n                                id=\"to\"\n                                value={mileage.to}\n                                onChange={handleChangeMileage}\n                                format=\"##,###\"\n                                maxLength={6}\n                                decimalScale={3}\n                                thousandSeparator={true}\n                            />\n                        </WrapperInput>\n                    </Inputs>\n                </label>\n\n                <ButtonForm\n                    disabled={\n                        brand.value === '' &&\n                        price.value === '' &&\n                        mileage.from === '' &&\n                        mileage.to === ''\n                    }\n                    onClick={handleClickSearch}\n                >\n                    Search\n                </ButtonForm>\n\n                <ButtonForm\n                    disabled={\n                        brand.value === '' &&\n                        price.value === '' &&\n                        mileage.from === '' &&\n                        mileage.to === ''\n                    }\n                    onClick={handleClickClear}\n                >\n                    Clear\n                </ButtonForm>\n            </Form>\n        </div>\n    );\n};\n\nexport default SearchForm;\n","export const createBrandOptions = brands => {\n    const options = brands.map(item => {\n        return {\n            value: item,\n            label: item,\n        };\n    });\n\n    return options;\n};\n","import React, { useEffect, useState } from 'react';\nimport CarList from 'components/CarList/CarList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCars, fetchCarsAll } from 'redux/cars/carsOperations';\nimport styled from '@emotion/styled';\n\nconst Catalog = () => {\n    const [page, setPage] = useState(1);\n    const [showLoadMore, setShowLoadMore] = useState(false);\n    const [allCars, setAllCars] = useState([]);\n    const [isFiltering, setIsFiltering] = useState(false);\n\n    const cars = useSelector(state => state.cars.cars);\n\n    const filter = useSelector(state => state.filter);\n\n    const dispatch = useDispatch();\n\n    const changePage = async () => {\n        setShowLoadMore(true);\n\n        setPage(prevState => prevState + 1);\n\n        const response = await dispatch(fetchCars(page + 1));\n\n        if (response.payload.data.length < 8) {\n            setShowLoadMore(false);\n        }\n    };\n\n    useEffect(() => {\n        if (page === 1) {\n            setShowLoadMore(true);\n            dispatch(fetchCars(1));\n        }\n    }, [dispatch, page]);\n\n    useEffect(() => {\n        if (isFiltering) {\n            const func = async () => {\n                setShowLoadMore(false);\n                const response = await dispatch(fetchCarsAll());\n                setAllCars(response.payload.data);\n            };\n            func();\n        }\n    }, [dispatch, isFiltering]);\n\n    const visibleCars = () => {\n        if (\n            filter.brand === '' &&\n            filter.price === '' &&\n            filter.mileage.from === '' &&\n            filter.mileage.to === ''\n        ) {\n            return cars;\n        }\n        if (!isFiltering) {\n            return cars;\n        }\n        if (isFiltering) {\n            const filteredCars = allCars.filter(item => {\n                let passFilter = true;\n\n                if (filter.brand) {\n                    passFilter = passFilter && item.make === filter.brand;\n                }\n\n                if (filter.price) {\n                    passFilter =\n                        passFilter && item.rentalPrice === filter.price;\n                }\n\n                if (filter.mileage.from && filter.mileage.to) {\n                    passFilter =\n                        passFilter &&\n                        item.mileage > filter.mileage.from &&\n                        item.mileage < filter.mileage.to;\n                } else {\n                    if (filter.mileage.from) {\n                        passFilter =\n                            passFilter && item.mileage > filter.mileage.from;\n                    }\n                    if (filter.mileage.to) {\n                        passFilter =\n                            passFilter && item.mileage < filter.mileage.to;\n                    }\n                }\n\n                return passFilter;\n            });\n\n            return filteredCars;\n        }\n    };\n\n    return (\n        <div>\n            <SearchForm\n                setIsFiltering={setIsFiltering}\n                setShowLoadMore={setShowLoadMore}\n            />\n\n            {isFiltering && visibleCars().length === 0 ? (\n                <ErrorSearch>\n                    Sorry, no results were found for these parameters. try\n                    changing them...\n                </ErrorSearch>\n            ) : (\n                <CarList\n                    cars={visibleCars()}\n                    changePage={changePage}\n                    showLoadMore={showLoadMore}\n                    isFiltering={isFiltering}\n                />\n            )}\n        </div>\n    );\n};\n\nconst ErrorSearch = styled.div`\n    text-align: center;\n`;\n\nexport default Catalog;\n"],"names":["createPriceOptions","arrayPrice","i","push","value","label","brands","setIsFiltering","setShowLoadMore","dispatch","useDispatch","useState","brand","setBrand","price","setPrice","from","to","mileage","setMileage","handleChangeMileage","evt","target","name","prevState","action","htmlFor","id","options","brandOpt","map","item","onChange","option","styles","control","borderRadius","height","backgroundColor","border","output","type","format","maxLength","decimalScale","thousandSeparator","disabled","onClick","preventDefault","changeFilter","split","join","fetchCars","ErrorSearch","styled","page","setPage","showLoadMore","allCars","setAllCars","isFiltering","cars","useSelector","state","filter","changePage","payload","data","length","useEffect","func","fetchCarsAll","response","visibleCars","passFilter","make","rentalPrice","CarList"],"sourceRoot":""}