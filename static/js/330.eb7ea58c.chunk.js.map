{"version":3,"file":"static/js/330.eb7ea58c.chunk.js","mappings":"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","sources":["components/SearchForm/SearchForm.styled.jsx","helpers/createPriceOptions.js","components/SearchForm/SearchForm.jsx","helpers/createBrandOptions.js","pages/Catalog.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n    display: flex;\n    padding-top: 50px;\n    margin-bottom: 50px;\n    justify-content: center;\n    align-items: flex-end;\n`;\n\nexport const WrapperBrand = styled.div`\n    width: 224px;\n    margin-right: 18px;\n`;\n\nexport const Label = styled.label`\n    color: #8a8a89;\n    font-family: Manrope;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 1.29;\n\n    display: block;\n    margin-bottom: 8px;\n`;\n\nexport const WrapperPrice = styled.div`\n    width: 125px;\n    margin-right: 18px;\n`;\n\nexport const Input = styled.input`\n    width: 160px;\n    height: 48px;\n    outline: none;\n    border: none;\n\n    padding: 14px 0;\n    border-radius: 14px 0px 0px 14px;\n    border-right: 1px solid rgba(138, 138, 137, 0.2);\n\n    padding-left: 70px;\n\n    background-color: #f7f7fb;\n\n    color: #121417;\n    font-family: Manrope;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 1.11;\n`;\n\nexport const Inputs = styled.div`\n    display: flex;\n`;\n\nexport const InputTo = styled(Input)`\n    border-radius: 0px 14px 14px 0px;\n    margin-right: 18px;\n\n    padding-left: 50px;\n`;\n\nexport const WrapperInput = styled.div`\n    position: relative;\n`;\n\nexport const LabelHolder = styled.label`\n    position: absolute;\n    left: 24px;\n    top: 14px;\n\n    color: #121417;\n    font-family: Manrope;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 1.11;\n`;\n\nexport const ButtonForm = styled.button`\n    width: 136px;\n    height: 48px;\n    padding: 14px 0;\n    border-radius: 12px;\n    background: #3470ff;\n\n    outline: none;\n    border: none;\n\n    color: #fff;\n    font-family: Manrope;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 1.43;\n\n    margin-left: 10px;\n`;\n","export const createPriceOptions = () => {\n    const arrayPrice = [];\n\n    for (let i = 30; i <= 400; i += 10) {\n        // const element = array[i];\n        arrayPrice.push({\n            value: i,\n            label: i,\n        });\n    }\n\n    return arrayPrice;\n};\n","import React, { useState } from 'react';\n\nimport {\n    Form,\n    WrapperBrand,\n    Label,\n    WrapperPrice,\n    Input,\n    InputTo,\n    Inputs,\n    WrapperInput,\n    LabelHolder,\n    ButtonForm,\n} from './SearchForm.styled';\n\nimport Select from 'react-select';\nimport { createBrandOptions } from 'helpers/createBrandOptions';\nimport { createPriceOptions } from 'helpers/createPriceOptions';\n\nimport { changeFilter } from 'redux/filter/filterSlice';\n\nimport brandOpt from '../../data/makes.json';\nimport { useDispatch } from 'react-redux';\nimport { fetchCars } from 'redux/cars/carsOperations';\n\nconst SearchForm = ({ setIsFiltering, setShowLoadMore }) => {\n    const dispatch = useDispatch();\n\n    const [brand, setBrand] = useState({\n        value: '',\n        label: 'Enter the text',\n    });\n    const [price, setPrice] = useState({\n        value: '',\n        label: 'To $',\n    });\n\n    const [mileage, setMileage] = useState({ from: '', to: '' });\n\n    const handleSelectBrand = option => {\n        setBrand(option);\n    };\n\n    const handleSelectPrice = option => {\n        // console.log(option);\n        setPrice({\n            value: `$${option.value}`,\n            label: `To ${option.label}$`,\n        });\n    };\n\n    const handleChangeMileage = evt => {\n        switch (evt.target.name) {\n            case 'from':\n                setMileage(prevState => ({\n                    ...prevState,\n                    from: evt.target.value,\n                }));\n                break;\n            case 'to':\n                setMileage(prevState => ({\n                    ...prevState,\n                    to: evt.target.value,\n                }));\n                break;\n            default:\n                break;\n        }\n    };\n\n    const handleClickSearch = evt => {\n        evt.preventDefault();\n\n        setIsFiltering(true);\n\n        // console.log({ brand, price, mileage });\n\n        dispatch(changeFilter({ brand, price, mileage }));\n    };\n\n    const handleClickClear = evt => {\n        evt.preventDefault();\n\n        dispatch(fetchCars(1));\n\n        setIsFiltering(false);\n        setShowLoadMore(true);\n\n        setBrand({\n            value: '',\n            label: 'Enter the text',\n        });\n\n        setPrice({\n            value: '',\n            label: 'To $',\n        });\n\n        setMileage({ from: '', to: '' });\n\n        dispatch(\n            changeFilter({\n                brand: { value: '' },\n                price: { value: '' },\n                mileage: { from: '', to: '' },\n            })\n        );\n    };\n\n    return (\n        <div>\n            <Form action=\"\">\n                <WrapperBrand>\n                    <Label htmlFor=\"brand\">Car brand</Label>\n                    <Select\n                        id=\"brand\"\n                        options={createBrandOptions(brandOpt)}\n                        value={brand}\n                        onChange={handleSelectBrand}\n                        styles={{\n                            control: styles => ({\n                                ...styles,\n                                borderRadius: '14px',\n                                height: '48px',\n                                backgroundColor: '#F7F7FB',\n                                border: 'none',\n                                output: 'none',\n                            }),\n                        }}\n                    />\n                </WrapperBrand>\n\n                <WrapperPrice>\n                    <Label htmlFor=\"price\">Price/ 1 hour</Label>\n                    <Select\n                        id=\"price\"\n                        options={createPriceOptions()}\n                        value={price}\n                        onChange={handleSelectPrice}\n                        styles={{\n                            control: styles => ({\n                                ...styles,\n                                borderRadius: '14px',\n                                height: '48px',\n                                backgroundColor: '#F7F7FB',\n                                border: 'none',\n                                output: 'none',\n                            }),\n                        }}\n                    />\n                </WrapperPrice>\n\n                <label htmlFor=\"\">\n                    <Label> Сar mileage / km</Label>\n                    <Inputs>\n                        <WrapperInput>\n                            <LabelHolder htmlFor=\"from\">From</LabelHolder>\n                            <Input\n                                type=\"text\"\n                                name=\"from\"\n                                id=\"from\"\n                                value={mileage.from}\n                                onChange={handleChangeMileage}\n                            />\n                        </WrapperInput>\n\n                        <WrapperInput>\n                            <LabelHolder htmlFor=\"to\">To</LabelHolder>\n                            <InputTo\n                                type=\"text\"\n                                name=\"to\"\n                                id=\"to\"\n                                value={mileage.to}\n                                onChange={handleChangeMileage}\n                            />\n                        </WrapperInput>\n                    </Inputs>\n                </label>\n\n                <ButtonForm onClick={handleClickSearch}>Search</ButtonForm>\n\n                <ButtonForm onClick={handleClickClear}>Clear</ButtonForm>\n            </Form>\n        </div>\n    );\n};\n\nexport default SearchForm;\n","export const createBrandOptions = brands => {\n    const options = brands.map(item => {\n        return {\n            value: item,\n            label: item,\n        };\n    });\n\n    return options;\n};\n","import React, { useEffect, useState } from 'react';\nimport CarList from 'components/CarList/CarList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCars, fetchCarsAll } from 'redux/cars/carsOperations';\n\n// import { fetchCarsAll } from 'redux/cars/carsOperations';\n\nconst Catalog = () => {\n    const [page, setPage] = useState(1);\n    const [showLoadMore, setShowLoadMore] = useState(false);\n    const [allCars, setAllCars] = useState([]);\n    const [isFiltering, setIsFiltering] = useState(false);\n\n    const cars = useSelector(state => state.cars.cars);\n\n    const filter = useSelector(state => state.filter);\n\n    const dispatch = useDispatch();\n\n    const changePage = async () => {\n        setShowLoadMore(true);\n\n        setPage(prevState => prevState + 1);\n\n        const response = await dispatch(fetchCars(page + 1));\n\n        if (response.payload.data.length < 8) {\n            setShowLoadMore(false);\n        }\n    };\n\n    useEffect(() => {\n        if (page === 1) {\n            setShowLoadMore(true);\n            dispatch(fetchCars(1));\n        }\n\n        // return () => setIsFiltering(false);\n    }, [dispatch, page]);\n\n    useEffect(() => {\n        if (isFiltering) {\n            const func = async () => {\n                setShowLoadMore(false);\n                const response = await dispatch(fetchCarsAll());\n                setAllCars(response.payload.data);\n            };\n            func();\n        }\n\n        // return () => setIsFiltering(false);\n    }, [dispatch, isFiltering]);\n\n    const visibleCars = () => {\n        if (\n            filter.brand === '' &&\n            filter.price === '' &&\n            filter.mileage.from === '' &&\n            filter.mileage.to === ''\n        ) {\n            return cars;\n        }\n        if (!isFiltering) {\n            return cars;\n        }\n        if (isFiltering) {\n            const filteredCars = allCars.filter(item => {\n                let passFilter = true;\n\n                if (filter.brand) {\n                    passFilter = passFilter && item.make === filter.brand;\n                }\n\n                if (filter.price) {\n                    passFilter =\n                        passFilter && item.rentalPrice === filter.price;\n                }\n\n                if (filter.mileage.from && filter.mileage.to) {\n                    passFilter =\n                        passFilter &&\n                        item.mileage > filter.mileage.from &&\n                        item.mileage < filter.mileage.to;\n                } else {\n                    if (filter.mileage.from) {\n                        passFilter =\n                            passFilter && item.mileage > filter.mileage.from;\n                    }\n                    if (filter.mileage.to) {\n                        passFilter =\n                            passFilter && item.mileage < filter.mileage.to;\n                    }\n                }\n\n                return passFilter;\n            });\n\n            return filteredCars;\n        }\n    };\n\n    return (\n        <div>\n            <SearchForm\n                setIsFiltering={setIsFiltering}\n                setShowLoadMore={setShowLoadMore}\n            />\n            <CarList\n                cars={visibleCars()}\n                changePage={changePage}\n                showLoadMore={showLoadMore}\n            />\n        </div>\n    );\n};\n\nexport default Catalog;\n"],"names":["Form","styled","WrapperBrand","Label","WrapperPrice","Input","Inputs","InputTo","WrapperInput","LabelHolder","ButtonForm","createPriceOptions","arrayPrice","i","push","value","label","brands","setIsFiltering","setShowLoadMore","dispatch","useDispatch","useState","brand","setBrand","price","setPrice","from","to","mileage","setMileage","handleChangeMileage","evt","target","name","prevState","action","htmlFor","id","options","brandOpt","map","item","onChange","option","styles","control","borderRadius","height","backgroundColor","border","output","type","onClick","preventDefault","changeFilter","fetchCars","page","setPage","showLoadMore","allCars","setAllCars","isFiltering","cars","useSelector","state","filter","changePage","payload","data","length","useEffect","func","fetchCarsAll","response","CarList","passFilter","make","rentalPrice"],"sourceRoot":""}